bootstrap_go_package {
    name: "soong-yaap",
    pkgPath: "yaap/soong/android",
    srcs: [
        "android/variable.go",
    ],
}

bootstrap_go_package {
    name: "soong-yaap-generator",
    pkgPath: "yaap/soong/generator",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
        "soong-shared",
    ],
    srcs: [
        "generator/generator.go",
        "generator/variables.go",
    ],
    pluginFor: ["soong_build"],
}

yaap_generator {
    name: "generated_kernel_includes",

    // The headers make command
    cmd: "PATH=$(ORIG_PATH) make $(KERNEL_MAKE_FLAGS) -C $(TARGET_KERNEL_SOURCE) O=$(KERNEL_BUILD_OUT_PREFIX)$(genDir) ARCH=$(KERNEL_ARCH) $(KERNEL_CROSS_COMPILE) $(KERNEL_CLANG_TRIPLE) $(KERNEL_CC) headers_install",

    // Directories that can be imported by a cc_* module generated_headers property
    export_include_dirs: [
        "usr/include",
        "usr/include/audio/include/uapi",
        "usr/techpack/audio/include"
    ],

    // Sources for dependency tracking
    dep_root: "$(TARGET_KERNEL_SOURCE)",
    dep_files: [ "Makefile", "include/**/*", "arch/$(KERNEL_ARCH)/include/**/*", "techpack/audio/include/**/*"],
}

cc_library_headers {
    name: "generated_kernel_headers",
    generated_headers: ["generated_kernel_includes"],
    export_generated_headers: ["generated_kernel_includes"],
    vendor_available: true,
    recovery_available: true,
}

soong_config_module_type {
    name: "bootloader_message_offset",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["bootloader_message_offset"],
    properties: [
        "cflags",
        "export_cflags",
    ],
}

bootloader_message_offset {
    name: "bootloader_message_offset_defaults",
    soong_config_variables: {
        bootloader_message_offset: {
            cflags: ["-DBOARD_RECOVERY_BLDRMSG_OFFSET=%s"],
            export_cflags: ["-DBOARD_RECOVERY_BLDRMSG_OFFSET=%s"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_fod_lib",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["target_surfaceflinger_fod_lib"],
    properties: [
        "cppflags",
        "whole_static_libs",
    ],
}

surfaceflinger_fod_lib {
    name: "surfaceflinger_fod_lib_defaults",
    soong_config_variables: {
        target_surfaceflinger_fod_lib: {
            cppflags: ["-DTARGET_PROVIDES_FOD_LIB"],
            whole_static_libs: ["%s"],
        },
    },
}
soong_config_module_type {
    name: "surfaceflinger_qcom_extensions",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    value_variables: ["qcom_display_headers_namespace"],
    properties: [
        "cppflags",
        "header_libs",
    ],
}

surfaceflinger_qcom_extensions {
    name: "surfaceflinger_qcom_ext_defaults",
    soong_config_variables: {
        qcom_display_headers_namespace: {
            cppflags: ["-DQCOM_UM_FAMILY"],
            header_libs: ["//%s:display_intf_headers"],
        },
    },
}
